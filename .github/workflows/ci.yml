name: Build, Test and Package

on:
  pull_request:
    types: [closed]
    branches: [ master ]

jobs:
  build-test-package:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Generate version string
        id: version
        run: echo "VERSION=1.0.${{ github.run_number }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: ./backend
        run: pytest

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test -- --watchAll=false

      - name: Build Docker images
        run: docker-compose build

      - name: Package Docker images
        run: |
          mkdir -p release
          docker save todo-app_backend:latest > release/backend.tar
          docker save todo-app_frontend:latest > release/frontend.tar
          tar -czf todo-app-${{ steps.version.outputs.VERSION }}.tar.gz release

      - name: Upload application artifact
        uses: actions/upload-artifact@v4
        with:
          name: todo-app-package-${{ steps.version.outputs.VERSION }}
          path: todo-app-*.tar.gz
