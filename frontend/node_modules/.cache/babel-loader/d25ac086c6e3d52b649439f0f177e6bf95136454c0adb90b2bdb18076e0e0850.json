{"ast":null,"code":"// Mock API calls to simulate a backend\nconst todos = [{\n  id: 1,\n  text: 'Learn React',\n  completed: true\n}, {\n  id: 2,\n  text: 'Build a Todo App',\n  completed: false\n}, {\n  id: 3,\n  text: 'Deploy the app',\n  completed: false\n}];\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nexport const getTodos = async () => {\n  await delay(500); // Simulate network delay\n  return todos;\n};\nexport const addTodo = async text => {\n  await delay(500);\n  const newTodo = {\n    id: Date.now(),\n    text,\n    completed: false\n  };\n  todos.push(newTodo);\n  return newTodo;\n};\nexport const updateTodo = async (id, updatedTodo) => {\n  await delay(500);\n  const index = todos.findIndex(todo => todo.id === id);\n  if (index !== -1) {\n    todos[index] = updatedTodo;\n  }\n  return updatedTodo;\n};\nexport const deleteTodo = async id => {\n  await delay(500);\n  const index = todos.findIndex(todo => todo.id === id);\n  if (index !== -1) {\n    todos.splice(index, 1);\n  }\n};","map":{"version":3,"names":["todos","id","text","completed","delay","ms","Promise","res","setTimeout","getTodos","addTodo","newTodo","Date","now","push","updateTodo","updatedTodo","index","findIndex","todo","deleteTodo","splice"],"sources":["/Users/vasylbyk/projects/todo-app/frontend/src/services/api.ts"],"sourcesContent":["import { Todo } from '../types/todo';\n\n// Mock API calls to simulate a backend\nconst todos: Todo[] = [\n  { id: 1, text: 'Learn React', completed: true },\n  { id: 2, text: 'Build a Todo App', completed: false },\n  { id: 3, text: 'Deploy the app', completed: false },\n];\n\nconst delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  await delay(500); // Simulate network delay\n  return todos;\n};\n\nexport const addTodo = async (text: string): Promise<Todo> => {\n  await delay(500);\n  const newTodo: Todo = {\n    id: Date.now(),\n    text,\n    completed: false,\n  };\n  todos.push(newTodo);\n  return newTodo;\n};\n\nexport const updateTodo = async (id: number, updatedTodo: Todo): Promise<Todo> => {\n  await delay(500);\n  const index = todos.findIndex(todo => todo.id === id);\n  if (index !== -1) {\n    todos[index] = updatedTodo;\n  }\n  return updatedTodo;\n};\n\nexport const deleteTodo = async (id: number): Promise<void> => {\n  await delay(500);\n  const index = todos.findIndex(todo => todo.id === id);\n  if (index !== -1) {\n    todos.splice(index, 1);\n  }\n};"],"mappings":"AAEA;AACA,MAAMA,KAAa,GAAG,CACpB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAE;AAAK,CAAC,EAC/C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,SAAS,EAAE;AAAM,CAAC,EACrD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAE;AAAM,CAAC,CACpD;AAED,MAAMC,KAAK,GAAIC,EAAU,IAAK,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;AAErE,OAAO,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAA6B;EACnD,MAAML,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAClB,OAAOJ,KAAK;AACd,CAAC;AAED,OAAO,MAAMU,OAAO,GAAG,MAAOR,IAAY,IAAoB;EAC5D,MAAME,KAAK,CAAC,GAAG,CAAC;EAChB,MAAMO,OAAa,GAAG;IACpBV,EAAE,EAAEW,IAAI,CAACC,GAAG,CAAC,CAAC;IACdX,IAAI;IACJC,SAAS,EAAE;EACb,CAAC;EACDH,KAAK,CAACc,IAAI,CAACH,OAAO,CAAC;EACnB,OAAOA,OAAO;AAChB,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOd,EAAU,EAAEe,WAAiB,KAAoB;EAChF,MAAMZ,KAAK,CAAC,GAAG,CAAC;EAChB,MAAMa,KAAK,GAAGjB,KAAK,CAACkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAAClB,EAAE,KAAKA,EAAE,CAAC;EACrD,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBjB,KAAK,CAACiB,KAAK,CAAC,GAAGD,WAAW;EAC5B;EACA,OAAOA,WAAW;AACpB,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOnB,EAAU,IAAoB;EAC7D,MAAMG,KAAK,CAAC,GAAG,CAAC;EAChB,MAAMa,KAAK,GAAGjB,KAAK,CAACkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAAClB,EAAE,KAAKA,EAAE,CAAC;EACrD,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBjB,KAAK,CAACqB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}