{"ast":null,"code":"// Replace with your FastAPI server's URL\nconst API_URL = 'http://127.0.0.1:8000';\nexport const getTodos = async () => {\n  const response = await fetch(`${API_URL}/todos`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch todos');\n  }\n  return await response.json();\n};\nexport const addTodo = async text => {\n  const response = await fetch(`${API_URL}/todos`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: text\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to add todo');\n  }\n  return await response.json();\n};\nexport const updateTodo = async (id, updatedTodo) => {\n  const response = await fetch(`${API_URL}/todos/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedTodo)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update todo');\n  }\n  return await response.json();\n};\nexport const deleteTodo = async id => {\n  const response = await fetch(`${API_URL}/todos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete todo');\n  }\n};\n\n// import { Todo } from '../types/todo';\n\n// // Mock API calls to simulate a backend\n// const todos: Todo[] = [\n//   { id: 1, text: 'Learn React', completed: true },\n//   { id: 2, text: 'Build a Todo App', completed: false },\n//   { id: 3, text: 'Deploy the app', completed: false },\n// ];\n\n// const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\n// export const getTodos = async (): Promise<Todo[]> => {\n//   await delay(500); // Simulate network delay\n//   return todos;\n// };\n\n// export const addTodo = async (text: string): Promise<Todo> => {\n//   await delay(500);\n//   const newTodo: Todo = {\n//     id: Date.now(),\n//     text,\n//     completed: false,\n//   };\n//   todos.push(newTodo);\n//   return newTodo;\n// };\n\n// export const updateTodo = async (id: number, updatedTodo: Todo): Promise<Todo> => {\n//   await delay(500);\n//   const index = todos.findIndex(todo => todo.id === id);\n//   if (index !== -1) {\n//     todos[index] = updatedTodo;\n//   }\n//   return updatedTodo;\n// };\n\n// export const deleteTodo = async (id: number): Promise<void> => {\n//   await delay(500);\n//   const index = todos.findIndex(todo => todo.id === id);\n//   if (index !== -1) {\n//     todos.splice(index, 1);\n//   }\n// };","map":{"version":3,"names":["API_URL","getTodos","response","fetch","ok","Error","json","addTodo","text","method","headers","body","JSON","stringify","title","updateTodo","id","updatedTodo","deleteTodo"],"sources":["/Users/vasylbyk/projects/todo-app/frontend/src/services/api.ts"],"sourcesContent":["import { Todo } from '../types/todo';\n\n// Replace with your FastAPI server's URL\nconst API_URL = 'http://127.0.0.1:8000';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const response = await fetch(`${API_URL}/todos`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch todos');\n  }\n  return await response.json();\n};\n\nexport const addTodo = async (text: string): Promise<Todo> => {\n  const response = await fetch(`${API_URL}/todos`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ title: text }),\n  });\n  if (!response.ok) {\n    throw new Error('Failed to add todo');\n  }\n  return await response.json();\n};\n\nexport const updateTodo = async (id: number, updatedTodo: Todo): Promise<Todo> => {\n  const response = await fetch(`${API_URL}/todos/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(updatedTodo),\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update todo');\n  }\n  return await response.json();\n};\n\nexport const deleteTodo = async (id: number): Promise<void> => {\n  const response = await fetch(`${API_URL}/todos/${id}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete todo');\n  }\n};\n\n// import { Todo } from '../types/todo';\n\n// // Mock API calls to simulate a backend\n// const todos: Todo[] = [\n//   { id: 1, text: 'Learn React', completed: true },\n//   { id: 2, text: 'Build a Todo App', completed: false },\n//   { id: 3, text: 'Deploy the app', completed: false },\n// ];\n\n// const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\n// export const getTodos = async (): Promise<Todo[]> => {\n//   await delay(500); // Simulate network delay\n//   return todos;\n// };\n\n// export const addTodo = async (text: string): Promise<Todo> => {\n//   await delay(500);\n//   const newTodo: Todo = {\n//     id: Date.now(),\n//     text,\n//     completed: false,\n//   };\n//   todos.push(newTodo);\n//   return newTodo;\n// };\n\n// export const updateTodo = async (id: number, updatedTodo: Todo): Promise<Todo> => {\n//   await delay(500);\n//   const index = todos.findIndex(todo => todo.id === id);\n//   if (index !== -1) {\n//     todos[index] = updatedTodo;\n//   }\n//   return updatedTodo;\n// };\n\n// export const deleteTodo = async (id: number): Promise<void> => {\n//   await delay(500);\n//   const index = todos.findIndex(todo => todo.id === id);\n//   if (index !== -1) {\n//     todos.splice(index, 1);\n//   }\n// };"],"mappings":"AAEA;AACA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAA6B;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,CAAC;EAChD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAY,IAAoB;EAC5D,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,EAAE;IAC/CS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,KAAK,EAAEN;IAAK,CAAC;EACtC,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAOC,EAAU,EAAEC,WAAiB,KAAoB;EAChF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,UAAUgB,EAAE,EAAE,EAAE;IACrDP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,WAAW;EAClC,CAAC,CAAC;EACF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMY,UAAU,GAAG,MAAOF,EAAU,IAAoB;EAC7D,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,UAAUgB,EAAE,EAAE,EAAE;IACrDP,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}